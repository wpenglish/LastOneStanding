{"version":3,"sources":["header2.png","components/Choice.js","components/ChoiceEvent.js","components/FinalVote.js","components/Card.js","components/Winning.js","components/GameController.js","GameContainer.js","Data.js","App.js","index.js"],"names":["module","exports","Choice","id","otherGameID","name","down","handleClick","className","onClick","ChoiceEvent","handleClose","show","gameOne","children","gameOneID","gameTwoID","handleClickChoice","showHideClassName","style","FinalVote","gameTwo","Card","props","WinScreen","GameController","state","refresh","lastGameSaved","lastGameKilled","lastGameKilledCard","lastGameKilledSaved","shuffle","vote","winShow","winner","upCards","downCards","list","showChoiceEvent","gameName","gameID","setState","hideChoiceEvent","showFinalVote","gameNameTwo","gameIDTwo","hideFinalVote","constructDeck","items","window","$itemList","split","index","length","temp","push","gameCards","map","game","key","shuffleNewDeck","i","j","Math","floor","random","half","ceil","splice","removeGames","gameSaved","findIndex","p","gameKilled","changeKilledText","changeSavedText","handleNewShuffle","saveLastKill","console","log","finalVote","showWinningCard","winID","this","React","Component","GameContainer","useState","lastCardKilled","setLastCardKilled","lastCardSaved","setLastCardSaved","Data","rows","cols","to","document","getElementById","value","App","src","header","path","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.fc884b1b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header2.fd32260c.png\";","import React from \"react\";\r\n\r\nconst Choice = ({ id, otherGameID, name, down, handleClick }) => {\r\n\r\n  return (\r\n    <div className=\"choice\">\r\n        <button onClick={() => handleClick(id, otherGameID, down)}>{name}</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Choice;\r\n","import React from \"react\";\r\n\r\nimport Choice from \"./Choice\"\r\n\r\nconst ChoiceEvent = ({ handleClose, show, children, gameOne, gameOneID, gameTwoID, handleClickChoice }) => {\r\n  const showHideClassName = show ? \"choiceCard display-block\" : \"choiceCard display-none\";\r\n\r\n  return (\r\n    <div className={showHideClassName}>\r\n      <section className='choiceCard-main'>\r\n        <h2 style={{\"font-family\": \"Arial\"}}>Which game would you like to save</h2>\r\n        <Choice id={gameOneID} otherGameID={gameTwoID} name={gameOne} down={false} handleClick={handleClickChoice} />\r\n        <Choice id={gameOneID} otherGameID={gameTwoID} name=\"Unknown Game\" down={true} handleClick={handleClickChoice} />\r\n        <button onClick={handleClose}> Close </button>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChoiceEvent;\r\n","import React from \"react\";\r\n\r\nimport Choice from \"./Choice\"\r\n\r\nconst FinalVote = ({ handleClose, show, children, gameOne, gameOneID, gameTwoID, gameTwo, handleClickChoice }) => {\r\n  const showHideClassName = show ? \"choiceCard display-block\" : \"choiceCard display-none\";\r\n\r\n  return (\r\n    <div className={showHideClassName}>\r\n      <section className='choiceCard-main'>\r\n        <Choice id={gameOneID} otherGameID={gameTwoID} name={gameOne} down={false} handleClick={handleClickChoice} />\r\n        <Choice id={gameTwoID} otherGameID={gameOneID} name={gameTwo} down={true} handleClick={handleClickChoice} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FinalVote;\r\n","import React from \"react\"\r\n\r\nfunction Card(props){\r\n    return(\r\n        <div className='cardContainer'>\r\n            <button className=\"card\" onClick={() => props.handleClick(props.name, props.id)}>\r\n                <h1>{props.name}</h1>\r\n            </button>\r\n            <div className='cardOutline'></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from \"react\";\r\n\r\nconst WinScreen = ({ handleClose, show, children, name }) => {\r\n  const showHideClassName = show ? \"choiceCard display-block\" : \"choiceCard display-none\";\r\n\r\n  return (\r\n    <div className={showHideClassName}>\r\n      <section className='choiceCard-main'>\r\n        <h1>{name}</h1>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WinScreen;\r\n","import React from \"react\"\r\n\r\nimport ChoiceEvent from \"./ChoiceEvent\"\r\nimport FinalVote from \"./FinalVote\"\r\nimport Card from \"./Card\"\r\nimport gameData from \"../gameData\"\r\nimport WinScreen from \"./Winning.js\"\r\n\r\nclass GameController extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.constructDeck()\r\n    }\r\n\r\n    state = { show: false,\r\n        refresh: \"\",\r\n        gameOne: \"\",\r\n        gameOneID: \"\",\r\n        gameTwo: \"\",\r\n        gameTwoID: \"\",\r\n        lastGameSaved: \"\",\r\n        lastGameKilled: \"\",\r\n        lastGameKilledCard: \"\",\r\n        lastGameKilledSaved: false,\r\n        shuffle: false,\r\n        vote: false,\r\n        winShow: false,\r\n        winner: \"\"\r\n    }\r\n\r\n    upCards=[]\r\n    downCards=[]\r\n    list = []\r\n    gameCards\r\n\r\n    showChoiceEvent = (gameName, gameID) => {\r\n      this.setState({ show: true, gameOne: gameName, gameOneID: gameID, gameTwoID: \"1\"});\r\n    }\r\n\r\n    hideChoiceEvent = () => {\r\n      this.setState({ show: false });\r\n    }\r\n\r\n    showFinalVote = (gameName, gameID, gameNameTwo, gameIDTwo) => {\r\n      this.setState({ vote: true, gameOne: gameName, gameOneID: gameID, gameTwoID: gameIDTwo, gameTwo: gameNameTwo});\r\n    }\r\n\r\n    hideFinalVote = (name) => {\r\n      this.setState({ vote: false, winShow: true, winner: name});\r\n    }\r\n\r\n    constructDeck = () => {\r\n        let items = window.$itemList.split('\\n')\r\n        for (let index = 0; index < items.length; index++){\r\n            let temp = []\r\n            temp.push(items[index])\r\n            temp.push(index)\r\n            this.list.push(temp)\r\n        }\r\n        this.gameCards = this.list.map(game => {\r\n            return(<Card key={game[1]} id={game[1]} name={game[0]} handleClick={this.showChoiceEvent}/>)\r\n        })\r\n    }\r\n\r\n\r\n    shuffleNewDeck = () => {\r\n        for (let i = this.gameCards.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [this.gameCards[i], this.gameCards[j]] = [this.gameCards[j], this.gameCards[i]];\r\n        }\r\n\r\n        if(this.gameCards.length % 2 === 0 ){\r\n            const half = Math.ceil(this.gameCards.length / 2);\r\n            this.upCards = this.gameCards.splice(0, half)\r\n            this.downCards = this.gameCards.splice(-half)\r\n        }\r\n        else{\r\n            const half = Math.floor(this.gameCards.length / 2);\r\n            this.upCards = this.gameCards.splice(0, half)\r\n            this.downCards = this.gameCards.splice(-half)\r\n        }\r\n\r\n        this.gameCards = this.gameCards.map(game => {\r\n            return(game)\r\n        })\r\n        this.setState({ refresh: \"true\" });\r\n    }\r\n\r\n    removeGames = (gameOne, gameTwo, down) => {\r\n        if(down){\r\n            const gameSaved = this.downCards.splice(this.downCards.findIndex(p => p.key == gameTwo), 1)[0]\r\n            this.gameCards.push(gameSaved)\r\n\r\n            this.downCards = this.downCards.map(game => {\r\n                return(game)\r\n            })\r\n\r\n            this.gameCards = this.gameCards.map(game => {\r\n                return(game)\r\n            })\r\n\r\n            const gameKilled = this.upCards.splice(this.upCards.findIndex(p => p.key == gameOne), 1)[0]\r\n            this.props.changeKilledText(gameKilled.props.name)\r\n            this.props.changeSavedText(gameSaved.props.name)\r\n\r\n            this.setState({lastGameKilled: gameKilled.props.name, lastGameKilledCard: gameKilled, lastGameKilledSaved: false});\r\n            this.upCards = this.upCards.map(game => {\r\n                return(game)\r\n            })\r\n        }\r\n        else {\r\n            const gameSaved = this.upCards.splice(this.upCards.findIndex(p => p.key == gameOne), 1)[0]\r\n            this.gameCards.push(gameSaved)\r\n\r\n            this.upCards = this.upCards.map(game => {\r\n                return(game)\r\n            })\r\n\r\n            this.gameCards = this.gameCards.map(game => {\r\n                return(game)\r\n            })\r\n\r\n            const gameKilled =  this.downCards.splice(this.downCards.findIndex(p => p.key == gameTwo), 1)[0]\r\n            this.props.changeKilledText(gameKilled.props.name)\r\n            this.props.changeSavedText(gameSaved.props.name)\r\n            this.setState({lastGameKilled: gameKilled.props.name, lastGameKilledCard: gameKilled, lastGameKilledSaved: false});\r\n            this.downCards = this.downCards.map(game => {\r\n                return(game)\r\n            })\r\n        }\r\n        if(this.downCards.length === 0){\r\n            this.handleNewShuffle()\r\n        }\r\n\r\n        this.hideChoiceEvent()\r\n    }\r\n\r\n    saveLastKill = () => {\r\n        if(!this.state.lastGameKilledSaved){\r\n            this.gameCards.push(this.state.lastGameKilledCard)\r\n            this.setState({lastGameKilledSaved: true})\r\n        }\r\n        console.log(this.gameCards)\r\n    }\r\n\r\n    handleNewShuffle = () =>{\r\n        if(this.gameCards.length <= 2){\r\n            this.finalVote(this.gameCards)\r\n        }\r\n        else{\r\n            this.shuffleNewDeck()\r\n        }\r\n    }\r\n\r\n    finalVote = () =>{\r\n        console.log(\"Final Vote\")\r\n        this.showFinalVote(this.gameCards.[0].props.name, this.gameCards.[0].props.id, this.gameCards.[1].props.name, this.gameCards.[1].props.id)\r\n    }\r\n\r\n    showWinningCard = (winID) =>{\r\n        const name = this.gameCards[this.gameCards.findIndex(p => p.key == winID)].props.name\r\n        this.hideFinalVote(name)\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(\"I mounted\")\r\n        this.shuffleNewDeck()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='game'>\r\n                <div className='gameCards'>\r\n                    {this.upCards}\r\n                </div>\r\n                <ChoiceEvent show={this.state.show} handleClose={this.hideChoiceEvent} gameOne={this.state.gameOne} gameOneID={this.state.gameOneID} handleClickChoice={this.removeGames}/>\r\n                <FinalVote show={this.state.vote} handleClose={this.hideFinalVote} gameOne={this.state.gameOne} gameOneID={this.state.gameOneID} gameTwo={this.state.gameTwo} gameTwoID={this.state.gameTwoID} handleClickChoice={this.showWinningCard}/>\r\n                <WinScreen show={this.state.winShow} name={this.state.winner}/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GameController\r\n","import React, { useState } from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\n\r\nimport App from \"./App\"\r\nimport './style.css'\r\nimport header from \"./header2.png\"\r\nimport GameController from \"./components/GameController\"\r\n\r\nfunction GameContainer(){\r\n\r\n    const [lastCardKilled, setLastCardKilled] = useState(\"\")\r\n    const [lastCardSaved, setLastCardSaved] = useState(\"\")\r\n\r\n    return(\r\n        <div className='appContainer'>\r\n            <div className='prev'>\r\n                <div className='killed'>\r\n                    <h1 style={{\"text-align\": \"center\"}}>Last game killed<br /> {lastCardKilled}</h1>\r\n                </div>\r\n                <div className='saved'>\r\n                    <h1 style={{\"text-align\": \"center\"}}>Last game saved<br /> {lastCardSaved}</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"app\">\r\n                <GameController changeKilledText={setLastCardKilled} changeSavedText={setLastCardSaved} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default GameContainer\r\n","import React, { useState } from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Data(){\r\n\r\n    const saveList = () =>{\r\n        window.$itemList = document.getElementById(\"itemsArea\").value\r\n        console.log(window.$itemList)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <textarea id=\"itemsArea\" rows=\"4\" cols=\"50\"></textarea>\r\n            <br/>\r\n            <Link to=\"/game\">\r\n                <button className=\"dataSubmit\" onClick={saveList}>Submit</button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Data\r\n","import React, { useState } from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { Link, Route, BrowserRouter, Switch } from 'react-router-dom';\r\n\r\nimport GameContainer from \"./GameContainer\"\r\nimport Data from \"./Data\"\r\nimport './style.css'\r\nimport header from \"./header2.png\"\r\n\r\nwindow.$itemList = ''\r\n\r\nfunction App(){\r\n\r\n    return(\r\n        <main>\r\n            <img src={header} className='header'></img>\r\n            <Switch>\r\n                <Route path='/LastOneStanding' component={Data} />\r\n                <Route path='/game' component={GameContainer} />\r\n            </Switch>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport App from \"./App\"\r\n\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}