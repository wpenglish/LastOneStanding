{"version":3,"sources":["header2.png","components/Choice.js","components/ChoiceEvent.js","components/FinalVote.js","components/Card.js","components/Winning.js","components/GameController.js","GameContainer.js","Data.js","App.js","index.js"],"names":["module","exports","Choice","id","otherGameID","name","down","handleClick","style","className","onClick","ChoiceEvent","handleClose","show","gameOne","children","gameOneID","gameTwoID","handleClickChoice","showHideClassName","FinalVote","gameTwo","Card","props","WinScreen","GameController","state","refresh","lastGameSaved","lastGameKilled","lastGameKilledCard","lastGameKilledSaved","shuffle","vote","winShow","winner","upCards","downCards","list","playerOrder","playerNum","parseInt","window","$playerNum","playerIndex","secondPlayerIndex","showChoiceEvent","gameName","gameID","setState","hideChoiceEvent","showFinalVote","gameNameTwo","gameIDTwo","hideFinalVote","constructDeck","items","$itemList","split","index","length","temp","push","gameCards","map","game","key","constructPlayers","nextPlayerTurn","changePlayerTurn","toString","shuffleNewDeck","i","j","Math","floor","random","half","ceil","splice","removeGames","gameSaved","findIndex","p","gameKilled","changeKilledText","changeSavedText","handleNewShuffle","saveLastKill","console","log","changeRound","finalVote","round","reverse","showWinningCard","winID","this","React","Component","GameContainer","useState","lastCardKilled","setLastCardKilled","lastCardSaved","setLastCardSaved","setRound","playerTurn","setPlayerTurn","player","Data","placeholder","type","step","min","max","to","document","getElementById","value","App","src","header","path","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.62858d75.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header2.fd32260c.png\";","import React from \"react\";\r\n\r\nconst Choice = ({ id, otherGameID, name, down, handleClick }) => {\r\n\r\n  return (\r\n    <div style={{\"display\":\"flex\"}}>\r\n        <button className=\"card\" onClick={() => handleClick(id, otherGameID, down)} style={{\"margin-left\":\"auto\", \"margin-right\": \"auto\"}}>\r\n            <h1>{name}</h1>\r\n        </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Choice;\r\n","import React from \"react\";\r\n\r\nimport Choice from \"./Choice\"\r\n\r\nconst ChoiceEvent = ({ handleClose, show, children, gameOne, gameOneID, gameTwoID, handleClickChoice }) => {\r\n  const showHideClassName = show ? \"choiceCard display-block\" : \"choiceCard display-none\";\r\n\r\n  return (\r\n    <div className={showHideClassName}>\r\n      <section className='choiceCard-main'>\r\n        <h2 style={{\"font-family\": \"Arial\", \"width\":\"100%\", \"text-align\": \"center\"}}>Which game would you like to save</h2>\r\n        <div className=\"choiceGrid\">\r\n            <Choice id={gameOneID} otherGameID={gameTwoID} name={gameOne} down={false} handleClick={handleClickChoice} />\r\n            <Choice id={gameOneID} otherGameID={gameTwoID} name=\"Unknown Game\" down={true} handleClick={handleClickChoice} />\r\n        </div>\r\n        <div style={{\"width\":\"100%\", \"display\":\"flex\"}}>\r\n            <button className=\"closeButton\" onClick={handleClose}> Close </button>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChoiceEvent;\r\n","import React from \"react\";\r\n\r\nimport Choice from \"./Choice\"\r\n\r\nconst FinalVote = ({ handleClose, show, children, gameOne, gameOneID, gameTwoID, gameTwo, handleClickChoice }) => {\r\n  const showHideClassName = show ? \"choiceCard display-block\" : \"choiceCard display-none\";\r\n\r\n  return (\r\n    <div className={showHideClassName}>\r\n      <section className='choiceCard-main'>\r\n        <h2 style={{\"font-family\": \"Arial\", \"width\":\"100%\", \"text-align\": \"center\"}}>All player vote on which game should win</h2>\r\n          <div className=\"choiceGrid\">\r\n            <Choice id={gameOneID} otherGameID={gameTwoID} name={gameOne} down={false} handleClick={handleClickChoice} />\r\n            <Choice id={gameTwoID} otherGameID={gameOneID} name={gameTwo} down={true} handleClick={handleClickChoice} />\r\n          </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FinalVote;\r\n","import React from \"react\"\r\n\r\nfunction Card(props){\r\n    return(\r\n        <div className='cardContainer'>\r\n            <button className=\"card\" onClick={() => props.handleClick(props.name, props.id)}>\r\n                <h1>{props.name}</h1>\r\n            </button>\r\n            <div className='cardOutline'></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from \"react\";\r\n\r\nconst WinScreen = ({ handleClose, show, children, name }) => {\r\n  const showHideClassName = show ? \"choiceCard display-block\" : \"choiceCard display-none\";\r\n\r\n  return (\r\n    <div className={showHideClassName}>\r\n      <section className='choiceCard-main'>\r\n        <h2 style={{\"font-family\": \"Arial\", \"width\":\"100%\", \"text-align\": \"center\"}}>The winner is</h2>\r\n        <h1 style={{\"font-family\": \"Arial\", \"width\":\"100%\", \"text-align\": \"center\", \"font-size\": \"40px\"}}>{name}</h1>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WinScreen;\r\n","import React from \"react\"\r\n\r\nimport ChoiceEvent from \"./ChoiceEvent\"\r\nimport FinalVote from \"./FinalVote\"\r\nimport Card from \"./Card\"\r\nimport gameData from \"../gameData\"\r\nimport WinScreen from \"./Winning.js\"\r\n\r\nclass GameController extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.constructDeck()\r\n        this.constructPlayers()\r\n    }\r\n\r\n    state = { show: false,\r\n        refresh: \"\",\r\n        gameOne: \"\",\r\n        gameOneID: \"\",\r\n        gameTwo: \"\",\r\n        gameTwoID: \"\",\r\n        lastGameSaved: \"\",\r\n        lastGameKilled: \"\",\r\n        lastGameKilledCard: \"\",\r\n        lastGameKilledSaved: false,\r\n        shuffle: false,\r\n        vote: false,\r\n        winShow: false,\r\n        winner: \"\",\r\n    }\r\n\r\n    upCards=[]\r\n    downCards=[]\r\n    list = []\r\n    playerOrder = []\r\n    playerNum = parseInt(window.$playerNum)\r\n    gameCards\r\n    playerIndex = 0\r\n    secondPlayerIndex = 1\r\n\r\n    showChoiceEvent = (gameName, gameID) => {\r\n      this.setState({ show: true, gameOne: gameName, gameOneID: gameID, gameTwoID: \"1\"});\r\n    }\r\n\r\n    hideChoiceEvent = () => {\r\n      this.setState({ show: false });\r\n    }\r\n\r\n    showFinalVote = (gameName, gameID, gameNameTwo, gameIDTwo) => {\r\n      this.setState({ vote: true, gameOne: gameName, gameOneID: gameID, gameTwoID: gameIDTwo, gameTwo: gameNameTwo});\r\n    }\r\n\r\n    hideFinalVote = (name) => {\r\n      this.setState({ vote: false, winShow: true, winner: name});\r\n    }\r\n\r\n    constructDeck = () => {\r\n        let items = window.$itemList.split('\\n')\r\n        for (let index = 0; index < items.length; index++){\r\n            let temp = []\r\n            temp.push(items[index])\r\n            temp.push(index)\r\n            this.list.push(temp)\r\n        }\r\n        this.gameCards = this.list.map(game => {\r\n            return(<Card key={game[1]} id={game[1]} name={game[0]} handleClick={this.showChoiceEvent}/>)\r\n        })\r\n    }\r\n\r\n    constructPlayers = () => {\r\n        for (let index = 1; index < this.playerNum + 1; index++ ){\r\n            this.playerOrder.push(index)\r\n        }\r\n    }\r\n\r\n    nextPlayerTurn = () => {\r\n        if(this.playerIndex == this.playerOrder.length - 2){\r\n            this.playerIndex = this.playerIndex + 1\r\n            this.secondPlayerIndex = 0\r\n        }\r\n        else if(this.playerIndex == this.playerOrder.length - 1){\r\n            this.playerIndex = 0\r\n            this.secondPlayerIndex = 1\r\n        }\r\n        else{\r\n            this.playerIndex = this.playerIndex + 1\r\n            this.secondPlayerIndex = this.secondPlayerIndex + 1\r\n        }\r\n\r\n        this.props.changePlayerTurn(this.playerOrder[this.playerIndex].toString() + \" > \" + this.playerOrder[this.secondPlayerIndex].toString())\r\n    }\r\n\r\n\r\n    shuffleNewDeck = () => {\r\n        for (let i = this.gameCards.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [this.gameCards[i], this.gameCards[j]] = [this.gameCards[j], this.gameCards[i]];\r\n        }\r\n\r\n        if(this.gameCards.length % 2 === 0 ){\r\n            const half = Math.ceil(this.gameCards.length / 2);\r\n            this.upCards = this.gameCards.splice(0, half)\r\n            this.downCards = this.gameCards.splice(-half)\r\n        }\r\n        else{\r\n            const half = Math.floor(this.gameCards.length / 2);\r\n            this.upCards = this.gameCards.splice(0, half)\r\n            this.downCards = this.gameCards.splice(-half)\r\n        }\r\n\r\n        this.gameCards = this.gameCards.map(game => {\r\n            return(game)\r\n        })\r\n        this.setState({ refresh: \"true\" });\r\n\r\n    }\r\n\r\n    removeGames = (gameOne, gameTwo, down) => {\r\n        if(down){\r\n            const gameSaved = this.downCards.splice(this.downCards.findIndex(p => p.key == gameTwo), 1)[0]\r\n            this.gameCards.push(gameSaved)\r\n\r\n            this.downCards = this.downCards.map(game => {\r\n                return(game)\r\n            })\r\n\r\n            this.gameCards = this.gameCards.map(game => {\r\n                return(game)\r\n            })\r\n\r\n            const gameKilled = this.upCards.splice(this.upCards.findIndex(p => p.key == gameOne), 1)[0]\r\n            this.props.changeKilledText(gameKilled.props.name)\r\n            this.props.changeSavedText(gameSaved.props.name)\r\n\r\n            this.setState({lastGameKilled: gameKilled.props.name, lastGameKilledCard: gameKilled, lastGameKilledSaved: false});\r\n            this.upCards = this.upCards.map(game => {\r\n                return(game)\r\n            })\r\n        }\r\n        else {\r\n            const gameSaved = this.upCards.splice(this.upCards.findIndex(p => p.key == gameOne), 1)[0]\r\n            this.gameCards.push(gameSaved)\r\n\r\n            this.upCards = this.upCards.map(game => {\r\n                return(game)\r\n            })\r\n\r\n            this.gameCards = this.gameCards.map(game => {\r\n                return(game)\r\n            })\r\n\r\n            const gameKilled =  this.downCards.splice(this.downCards.findIndex(p => p.key == gameTwo), 1)[0]\r\n            this.props.changeKilledText(gameKilled.props.name)\r\n            this.props.changeSavedText(gameSaved.props.name)\r\n            this.setState({lastGameKilled: gameKilled.props.name, lastGameKilledCard: gameKilled, lastGameKilledSaved: false});\r\n            this.downCards = this.downCards.map(game => {\r\n                return(game)\r\n            })\r\n        }\r\n        if(this.downCards.length === 0){\r\n            this.handleNewShuffle()\r\n        }\r\n        this.nextPlayerTurn()\r\n        this.hideChoiceEvent()\r\n    }\r\n\r\n    saveLastKill = () => {\r\n        if(!this.state.lastGameKilledSaved){\r\n            this.gameCards.push(this.state.lastGameKilledCard)\r\n            this.setState({lastGameKilledSaved: true})\r\n        }\r\n        console.log(this.gameCards)\r\n    }\r\n\r\n    handleNewShuffle = () =>{\r\n        if(this.gameCards.length <= 2){\r\n            this.props.changeRound(\"Final\")\r\n            this.finalVote(this.gameCards)\r\n        }\r\n        else{\r\n            this.props.changeRound(this.props.round + 1)\r\n            this.shuffleNewDeck()\r\n            this.nextPlayerTurn()\r\n            this.playerOrder.reverse()\r\n        }\r\n    }\r\n\r\n    finalVote = () =>{\r\n        this.showFinalVote(this.gameCards.[0].props.name, this.gameCards.[0].props.id, this.gameCards.[1].props.name, this.gameCards.[1].props.id)\r\n    }\r\n\r\n    showWinningCard = (winID) =>{\r\n        const name = this.gameCards[this.gameCards.findIndex(p => p.key == winID)].props.name\r\n        this.hideFinalVote(name)\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(\"I mounted\")\r\n        this.shuffleNewDeck()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='game'>\r\n                <div className='gameCards'>\r\n                    {this.upCards}\r\n                </div>\r\n                <ChoiceEvent show={this.state.show} handleClose={this.hideChoiceEvent} gameOne={this.state.gameOne} gameOneID={this.state.gameOneID} handleClickChoice={this.removeGames}/>\r\n                <FinalVote show={this.state.vote} handleClose={this.hideFinalVote} gameOne={this.state.gameOne} gameOneID={this.state.gameOneID} gameTwo={this.state.gameTwo} gameTwoID={this.state.gameTwoID} handleClickChoice={this.showWinningCard}/>\r\n                <WinScreen show={this.state.winShow} name={this.state.winner}/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GameController\r\n","import React, { useState } from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\n\r\nimport App from \"./App\"\r\nimport './style.css'\r\nimport header from \"./header2.png\"\r\nimport GameController from \"./components/GameController\"\r\n\r\nfunction GameContainer(){\r\n\r\n    const [lastCardKilled, setLastCardKilled] = useState(\"\")\r\n    const [lastCardSaved, setLastCardSaved] = useState(\"\")\r\n    const [round, setRound] = useState(1)\r\n    const [playerTurn, setPlayerTurn] = useState(\"1 > 2\")\r\n\r\n    return(\r\n        <div className='appContainer'>\r\n            <div className='prev'>\r\n                <div className='round'>\r\n                    <h1 style={{\"text-align\": \"center\", \"margin\":\"10px 0 10px 0\"}}>Round<br /> {round}</h1>\r\n                </div>\r\n                <div className='playerTurn'>\r\n                    <h1 style={{\"text-align\": \"center\", \"margin\":\"10px 0 10px 0\"}}>Player's Turn<br /> {playerTurn}</h1>\r\n                </div>\r\n                <div className='killed'>\r\n                    <h1 style={{\"text-align\": \"center\"}}>Last game killed<br /> {lastCardKilled}</h1>\r\n                </div>\r\n                <div className='saved'>\r\n                    <h1 style={{\"text-align\": \"center\"}}>Last game saved<br /> {lastCardSaved}</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"app\">\r\n                <GameController changeKilledText={setLastCardKilled} changeSavedText={setLastCardSaved} changeRound={setRound} changePlayerTurn={setPlayerTurn} player={playerTurn} round={round}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default GameContainer\r\n","import React, { useState } from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Data(){\r\n\r\n    const saveList = () =>{\r\n        window.$itemList = document.getElementById(\"itemsArea\").value\r\n        window.$playerNum = document.getElementById(\"playerArea\").value\r\n        console.log(window.$playerNum)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"dataDiv\">\r\n                <div className=\"inside\">\r\n                    <textarea id=\"itemsArea\" placeholder=\"Put items here...\"></textarea>\r\n                    <input type=\"number\" step=\"1\" placeholder=\"How many players?\" id=\"playerArea\" min=\"2\" max=\"20\"></input>\r\n                    <br/>\r\n                    <Link to=\"/game\">\r\n                        <button className=\"dataSubmit\" onClick={saveList}>Submit</button>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"inside2\">\r\n                    <h3 className=\"info\" style={{\"margin-top\":\"0px\"}}>To input a list of items, put each item on a single line without anything else. Each line will count as a item. Even a blank one.<br /><br />  It may include punctuation but they will be included in the view when playing the game. Here is an example on how to input the items:</h3>\r\n                    <p className=\"item\">The Legend of Zelda</p>\r\n                    <p className=\"item\">Super Mario Bros.</p>\r\n                    <p className=\"item\">Super Metroid</p>\r\n                    <p className=\"item\">Kirby Super Star</p>\r\n                    <p className=\"item\">Donkey Kong Country</p>\r\n                    <p className=\"item\">A Short Hike</p>\r\n                    <h3 className=\"info\">Once you have all the items you want to include, hit submit and the game will start</h3>\r\n                </div>\r\n            </div>\r\n            <div className=\"rulesDiv\">\r\n                <div className=\"rules\"><h1>Rules</h1></div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Data\r\n","import React, { useState } from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { Link, Route, BrowserRouter, Switch } from 'react-router-dom';\r\n\r\nimport GameContainer from \"./GameContainer\"\r\nimport Data from \"./Data\"\r\nimport './style.css'\r\nimport header from \"./header2.png\"\r\n\r\nwindow.$itemList = ''\r\nwindow.$playerNum = ''\r\n\r\nfunction App(){\r\n\r\n    return(\r\n        <main>\r\n            <img src={header} className='header'></img>\r\n            <Switch>\r\n                <Route path='/LastOneStanding' component={Data} />\r\n                <Route path='/game' component={GameContainer} />\r\n            </Switch>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport App from \"./App\"\r\n\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}